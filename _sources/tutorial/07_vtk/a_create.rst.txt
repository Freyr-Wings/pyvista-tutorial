
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/07_vtk/a_create.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorial_07_vtk_a_create.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_07_vtk_a_create.py:


Create VTK Objects
~~~~~~~~~~~~~~~~~~

This exercise walks through the creation of a few different types of VTK datasets.

.. GENERATED FROM PYTHON SOURCE LINES 7-16

.. code-block:: default

    import numpy as np
    import pyvista as pv
    import vtk

    try:
        from vtkmodules.util.numpy_support import numpy_to_vtk
    except:
        from vtk.util.numpy_support import numpy_to_vtk








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Create ``vtkImageData``
^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 19-24

.. code-block:: default

    image = vtk.vtkImageData()
    image.SetDimensions(10, 10, 2)
    image.SetSpacing(1, 2, 5)
    image.SetOrigin(-0.5, -3, 0)








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Add point data

.. GENERATED FROM PYTHON SOURCE LINES 26-33

.. code-block:: default

    values = np.arange(np.product(image.GetDimensions()))
    # Convert numpy array to VTK array
    arr = numpy_to_vtk(values)
    arr.SetName("values")  # CRITICAL
    image.GetPointData().SetScalars(arr)
    image





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <vtkmodules.vtkCommonDataModel.vtkImageData(0x55feef4fa310) at 0x7fe229275400>



.. GENERATED FROM PYTHON SOURCE LINES 34-35

Plot with PyVista for simplicity

.. GENERATED FROM PYTHON SOURCE LINES 35-37

.. code-block:: default

    pv.plot(image, show_edges=True)




.. image-sg:: /tutorial/07_vtk/images/sphx_glr_a_create_001.png
   :alt: a create
   :srcset: /tutorial/07_vtk/images/sphx_glr_a_create_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 38-40

Create ``vtkStructuredGrid``
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 40-61

.. code-block:: default


    # Define structured points with NumPy
    x = np.arange(-10, 10, 0.25)
    y = np.arange(-10, 10, 0.25)
    x, y = np.meshgrid(x, y)
    r = np.sqrt(x**2 + y**2)
    z = np.sin(r)

    # Join the points
    values = np.c_[x.ravel(), y.ravel(), z.ravel()]

    coords = numpy_to_vtk(values)

    points = vtk.vtkPoints()
    points.SetData(coords)

    grid = vtk.vtkStructuredGrid()
    grid.SetDimensions(*z.shape, 1)
    grid.SetPoints(points)
    grid





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <vtkmodules.vtkCommonDataModel.vtkStructuredGrid(0x55fef5ac3680) at 0x7fe229275460>



.. GENERATED FROM PYTHON SOURCE LINES 62-63

Add point data

.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. code-block:: default

    arr = numpy_to_vtk(z.ravel())
    arr.SetName("z")  # CRITICAL
    grid.GetPointData().SetScalars(arr)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0



.. GENERATED FROM PYTHON SOURCE LINES 69-70

Plot with PyVista for simplicity

.. GENERATED FROM PYTHON SOURCE LINES 70-71

.. code-block:: default

    pv.plot(grid, show_edges=True)



.. image-sg:: /tutorial/07_vtk/images/sphx_glr_a_create_002.png
   :alt: a create
   :srcset: /tutorial/07_vtk/images/sphx_glr_a_create_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.610 seconds)


.. _sphx_glr_download_tutorial_07_vtk_a_create.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/pyvista/pyvista-tutorial/gh-pages?urlpath=lab/tree/notebooks/tutorial/07_vtk/a_create.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: a_create.py <a_create.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: a_create.ipynb <a_create.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
